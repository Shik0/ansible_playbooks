---
- hosts: loadbalancer
  become: true
  gather_facts: false
  tasks:
    - name: verify nginx status
      command: service nginx status warn=false
      changed_when: false

    - name: verify nginx is listening on port 80
      wait_for: port=80 timeout=1

- hosts: webserver
  become: true
  gather_facts: false
  tasks:
    - name: verify apache status
      command: service apache2 status warn=false
      changed_when: false

    - name: verify apache is listening port 80
      wait_for: port=80 timeout=1

- hosts: database
  become: true
  tasks:
    - name: verify database status
      command: service mysql status warn=false
      changed_when: false

    - name: verify mysql database is listening on port 3306
      wait_for: host={{ ansible_enp0s8.ipv4.address }} port=3306 timeout=1

- hosts: control
  gather_facts: false
  tasks:
    - name: verify end-to-end response
      uri: url=http://{{item}} return_content=yes
      with_items: "{{groups.loadbalancer}}"
      register: lb_index

    - fail: msg="index failed to return the content"
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{lb_index.results}}"

    - name: verify end-to-end database response
      uri: url=http://{{item}}/db return_content=yes
      with_items: "{{groups.loadbalancer}}"
      register: lb_db

    - fail: msg="index failed to return the content"
      when: "'Database Connected from ' not in item.content"
      with_items: "{{lb_db.results}}"

- hosts: loadbalancer
  gather_facts: false
  tasks:
    - name: verify back-end response
      uri: url=http://{{item}} return_content=yes
      with_items: "{{groups.webserver}}"
      register: app_index
    
    - fail: msg="index failed to return the content"
      when: "'Hello, from sunny ' not in item.content"
      with_items: "{{app_index.results}}"

    - name: verify back-end database response
      uri: url=http://{{item}}/db return_content=yes
      with_items: "{{groups.webserver}}"
      register: app_db

    - fail: msg="index failed to return the content"
      when: "'Database Connected from ' not in item.content"
      with_items: "{{app_db.results}}"
